version: '3.8'

services:
  frontend:
    container_name: frontend-api
    build:
      context: "./frontend"
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    command: npm run dev

  geocode_api:
    container_name: geocode_api
    build:
      context: "./backend-api"
      dockerfile: Dockerfile
    ports: 
      - "3000:3000"
    volumes:
      - ./backend-api:/app/backend
      - /app/backend/node_modules
    environment:
      - NODE_ENV=DEV
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - mongo
    command: npm run dev

  mongo:
    image: mongo:latest
    container_name: mongo-geocode
    ports: 
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - mongo-data:/data/db  # Fixed volume name

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo-geocode
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    depends_on:
      - mongo

  stripe:
    image: stripe/stripe-cli
    container_name: stripe-cli
    command: ["listen", "--forward-to", "http://geocode_api:3000/api/payment/webhook"]
    volumes:
      - stripe-cli-config:/root/.config/stripe
    depends_on:
      - geocode_api

volumes:
  mongo-data:  # Ensure this matches the name in `mongo` service
  stripe-cli-config:
